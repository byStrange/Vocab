{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"content\",\n  ref: \"word\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"topics\",\n  ref: \"topics\"\n};\nconst _hoisted_4 = [\"onClick\", \"data-id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.showWord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($data.randomWordFromChoosenTopic), 1 /* TEXT */)], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), !$props.showWord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topics, topic => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: topic.id,\n      class: _normalizeClass([\"topic\", {\n        choosen: topic.choosen\n      }]),\n      onClick: $event => $options.selectTopic(topic.id),\n      \"data-id\": topic.id\n    }, [_createElementVNode(\"span\", null, _toDisplayString(topic.name), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAK;;;EACTA,KAAK,EAAC,SAAS;EAACC,GAAG,EAAC;;;;EAGpBD,KAAK,EAAC,QAAQ;EAACC,GAAG,EAAC;;;;uBAJ1BC,oBAgBM,OAhBNC,UAgBM,GAfkCC,eAAQ,kBAA9CF,oBAEM,OAFNG,UAEM,GADJC,oBAA8C,+BAApCC,gCAA0B,gFAEEH,eAAQ,kBAAhDF,oBAWM,OAXNM,UAWM,sBAVJN,oBASWO,6BATeF,YAAM,EAAfG,KAAK;yBACpBR,oBAOM;WARgCQ,KAAK,CAACC,EAAE;MAE5CX,KAAK,mBAAC,OAAO;QAAAY,SACMF,KAAK,CAACE;MAAO;MAC/BC,OAAK,YAAEC,oBAAW,CAACJ,KAAK,CAACC,EAAE;MAC3B,SAAO,EAAED,KAAK,CAACC;QAEhBL,oBAA6B,+BAApBI,KAAK,CAACK,IAAI","names":["class","ref","_createElementBlock","_hoisted_1","$props","_hoisted_2","_createElementVNode","$data","_hoisted_3","_Fragment","topic","id","choosen","onClick","$options","name"],"sourceRoot":"","sources":["/home/strange/Documents/Github/vue-lessons/vocab/src/components/Box.vue"],"sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"content\" ref=\"word\" v-if=\"showWord\">\n      <span> {{ randomWordFromChoosenTopic }}</span>\n    </div>\n    <div class=\"topics\" ref=\"topics\" v-if=\"!showWord\">\n      <template v-for=\"topic in topics\" :key=\"topic.id\">\n        <div\n          class=\"topic\"\n          :class=\"{ choosen: topic.choosen }\"\n          @click=\"selectTopic(topic.id)\"\n          :data-id=\"topic.id\"\n        >\n          <span>{{ topic.name }}</span>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Box\",\n  props: [\"showWord\"],\n  data() {\n    return {\n      randomWordFromChoosenTopic: \"\",\n      topics: [\n        {\n          name: \"topic 1\",\n          id: \"1\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: true,\n        },\n        {\n          name: \"topic 2\",\n          id: \"2\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: false,\n        },\n        {\n          name: \"topic 3\",\n          id: \"3\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: false,\n        },\n      ],\n    };\n  },\n  methods: {\n    initWord() {\n      var choosenTopic = this.topics.find((topic) => topic.choosen === true);\n      this.randomWordFromChoosenTopic =\n        choosenTopic.words[\n          Math.floor(Math.random() * choosenTopic.words.length)\n        ][Math.floor(Math.random() * 2)];\n    },\n    selectTopic(e) {\n      const topicId = e;\n      const topic = this.topics.find((topic) => topic.id === topicId);\n      topic.choosen = true;\n\n      // change all other topics' choosen property to false\n      this.topics.forEach((topic) => {\n        if (topic.id !== topicId) {\n          topic.choosen = false;\n        }\n      });\n\n      // change the showWord property to true\n      this.$emit(\"changeShowWord\", true);\n    },\n  },\n  mounted() {\n    \n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}