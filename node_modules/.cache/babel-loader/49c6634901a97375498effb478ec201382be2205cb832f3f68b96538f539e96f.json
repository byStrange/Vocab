{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"content\",\n  ref: \"word\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"accused\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"topics\",\n  ref: \"topics\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.showWord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_4, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), !$props.showWord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topics, topic => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: topic.id,\n      class: _normalizeClass([\"topic\", {\n        choosen: topic.choosen\n      }]),\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.selectTopic && $options.selectTopic(...args)),\n      \"data-id\": \"{{ topic.id}}\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(topic.name), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAK;;;EACTA,KAAK,EAAC,SAAS;EAACC,GAAG,EAAC;;gCACvBC,oBAAoB,cAAd,SAAO;oBAAbC,UAAoB;;;EAEjBH,KAAK,EAAC,QAAQ;EAACC,GAAG,EAAC;;;uBAJ1BG,oBAgBM,OAhBNC,UAgBM,GAfkCC,eAAQ,kBAA9CF,oBAEM,OAFNG,UAEM,2EACkCD,eAAQ,kBAAhDF,oBAWM,OAXNI,UAWM,sBAVJJ,oBASWK,6BATeC,YAAM,EAAfC,KAAK;yBACpBP,oBAOM;WARgCO,KAAK,CAACC,EAAE;MAE5CZ,KAAK,mBAAC,OAAO;QAAAa,SACMF,KAAK,CAACE;MAAO;MAC/BC,OAAK,yCAAEC,qDAAW;MACnB,SAAO,EAAC;QAERb,oBAA6B,+BAApBS,KAAK,CAACK,IAAI","names":["class","ref","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","$props","_hoisted_2","_hoisted_5","_Fragment","$data","topic","id","choosen","onClick","$options","name"],"sourceRoot":"","sources":["/home/strange/Documents/Github/vue-lessons/vocab/src/components/Box.vue"],"sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"content\" ref=\"word\" v-if=\"showWord\">\n      <span>accused</span>\n    </div>\n    <div class=\"topics\" ref=\"topics\" v-if=\"!showWord\">\n      <template v-for=\"topic in topics\" :key=\"topic.id\">\n        <div\n          class=\"topic\"\n          :class=\"{ choosen: topic.choosen }\"\n          @click=\"selectTopic\"\n          data-id=\"{{ topic.id}}\"\n        >\n          <span>{{ topic.name }}</span>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      topics: [\n        {\n          name: \"topic 1\",\n          id: \"1\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: true,\n        },\n        {\n          name: \"topic 2\",\n          id: \"2\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: false,\n        },\n        {\n          name: \"topic 3\",\n          id: \"3\",\n          words: [\n            [\"accused\", \"aybdor\"],\n            [\"play\", \"oynamoq\"],\n            [\"choose\", \"tanlamoq\"],\n          ],\n          choosen: false,\n        },\n      ],\n    };\n  },\n  name: \"Box\",\n  props: [\"showWord\"],\n  methods: {\n    selectTopic(e) {\n      // when user click on topic, we need to change that topic's choosen property to true\n      // and all other topics' choosen property to false\n\n      // get the topic id\n      const topicId = e.target.parentNode.getAttribute(\"data-id\");\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}